---
$schema: http://json-schema.org/draft-04/hyper-schema
title: Room API - User
description: A user
stability: prototype
type:
- object
definitions:
  id:
    description: unique identifier of the user
    readOnly: true
    type:
    - integer
  first_name:
    description: first name of the user
    type: string
  last_name:
    description: last name of the user
    type: string
  email:
    description: the email of the user
    format: email
    type: string
  image:
    description: the image of the user
    type:
      - "null"
      - string
  status:
    description: the current user availability status
    type:
      - "null"
      - object
  room_id:
    description: the id of the room that the user is logged in
    type:
      - "null"
      - integer
  mood:
    description: the current user mood
    type:
      - "null"
      - object
    targetSchema:
      "$ref": "/schemata/mood"
  identity:
    anyOf:
    - $ref: /schemata/user#/definitions/id
links:
- title: List
  description: List all users
  href: "/user"
  method: GET
  rel: instances
  schema:
    additionalProperties: false
    properties: {}
    type:
    - object
  targetSchema:
    anyOf:
      - type: array
        items:
          "$ref": "/schemata/user"
      - "$ref": "/schemata/error"
- title: Info
  description: Is shows the info for existing user.
  href: "/user/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fidentity)}"
  method: GET
  rel: self
  schema:
    strictProperties: true
    properties: {}
    type:
      - object
  targetSchema:
    anyOf:
      - $ref: /schemata/user
      - $ref: /schemata/error
- title: Update
  description: Update the user info
  href: "/user/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fidentity)}"
  method: PUT
  rel: self
  schema:
    additionalProperties: false
    properties:
      id:
        $ref: /schemata/user#/definitions/id
      first_name:
        $ref: /schemata/user#/definitions/first_name
      last_name:
        $ref: /schemata/user#/definitions/last_name
      email:
        $ref: /schemata/user#/definitions/email
      image:
        $ref: /schemata/user#/definitions/image
      status:
        description: the status of the user
        type:
          - "null"
          - object
      mood:
        description: the mood of the user
        type:
          - "null"
          - object
    type:
      - object
  targetSchema:
    anyOf:
      - "$ref": "/schemata/user"
      - "$ref": "/schemata/error"
- title: Leave rooms
  description: It takes out the user all rooms
  href: "/user/{(%2Fschemata%2Fuser%23%2Fdefinitions%2Fidentity)}/leave_rooms"
  method: PUT
  rel: self
  schema:
    strictProperties: true
    properties: {}
    type:
      - object
  targetSchema:
    anyOf:
      - "$ref": "/schemata/user"
      - "$ref": "/schemata/error"
properties:
  id:
    $ref: /schemata/user#/definitions/id
  first_name:
    $ref: /schemata/user#/definitions/first_name
  last_name:
    $ref: /schemata/user#/definitions/last_name
  email:
    $ref: /schemata/user#/definitions/email
  image:
    $ref: /schemata/user#/definitions/image
  status:
    $ref: /schemata/user#/definitions/status
  mood:
    $ref: /schemata/user#/definitions/mood
additionalProperties: false
id: schemata/user
